language: java
jdk:
  - openjdk8

brances:
  only:
    - main   # main 브랜치에 push 가 되었을 때 Travis CI 반응

# 빌드 전에 gradlew의 권한을 추가한다.
before_install:
  - chmod +x gradlew

cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script:
  - "./gradlew clean build"   # jar 만들기

before_deploy:
  - zip -r BE *
  - mkdir -p deploy
  - mv BE.zip deploy/BE.zip
  #  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
#  - zip -r BE *
#  - mkdir -p deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
#  - cp scripts/*.sh    # 배포 스크립트 디렉토리에 담기
#  - cp appspec.yml     # 배포에 필요한 appspec.yml
#  - cp Dockerfile      # dockerfile 넘기기
#  - cp build/libs/*.jar   # jar 파일 넘기기
##  - cd before-deploy && zip -r  * # before-deploy로 이동후 전체 압축
#  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동후 deploy 디렉토리 생성
#  - mv BE.zip deploy/BE.zip # deploy로 zip파일 이동

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY         # Travis CI 에서 IAM 사용자 엑세스 키

    secret_access_key: $AWS_SECRET_KEY     # Travis CI 에서 IAM 사용자 비밀 엑세스 키

    bucket: hanghaefinal    # S3 Bucket 이름
    region: ap-northeast-2
    skip_cleanup: true
    acl: private               # zip 파일 공개 여부
    local_dir: deploy
    wait-until-deployed: true
    on:
      all_branches: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY        # Travis CI 에서 IAM 사용자 엑세스 키

    secret_access_key: $AWS_SECRET_KEY    # Travis CI 에서 IAM 사용자 비밀 엑세스 키

    bucket: hanghaefinal         # S3 Bucket 이름
    key: BE.zip   # 위에서 만든 zip 파일 이름 !! (꼭 맞춰서 적어야함)
    bundle_type: zip
    application: 1code-Deploy          # CodeDeploy 애플리케이션 이름

    deployment_group: 1code-Deploy   # CodeDeploy 배포 그룹 이름

    region: ap-northeast-2
    wait-until-deployed: true
    on:
      all_branches: true

notification:  # 이메일 알림
  email:
    recipients:
      - sjs939883@gmail.com